/**
 * Apply a natural box layout model to all elements
 * while allowing components to change.
 **/

html {
    box-sizing: border-box;
}

*,
*:before,
*:after {
    box-sizing: inherit;
}

body {
    padding: 0px;
}


/**
 * Flexbox settings to keep all flexbox content
 * clumped in the middle of the display area.
 **/

.flex-container {
    display: -webkit-flex;
    display: flex;
    -webkit-flex-flow: row wrap;
    flex-flow: row wrap;
    -webkit-justify-content: center;
    justify-content: center;
    align-items: center;
}

.flex-container * {
    -webkit-flex: initial;
    flex: initial;
}

*:before,
*:after {
    display: inherit;
    -webkit-flex-flow: inherit;
    flex-flow: inherit;
    -webkit-justify-content: inherit;
    justify-content: inherit;
    align-items: inherit;
    -webkit-flex: initial;
    flex: initial;
}


/**
 * Styles for all elements
 **/

.soft-border {
    -webkit-box-shadow: 0px 0px 6px 2px rgb(142, 142, 142);
    -moz-box-shadow: 0px 0px 6px 2px rgb(142, 142, 142);
    box-shadow: 0px 0px 6px 2px rgb(142, 142, 142);
}

.text-unselectable {
    -moz-user-select: none;
    -webkit-user-select: none;
    -ms-user-select: none;
    user-select: none;
    -o-user-select: none;
}


/**
 * Styles for layout elements
 **/


/*
body * {
    border: solid black 1px;
}
*/

#menu-panel {
    display: block;
    padding: 0.25em;
    border: 2px #CCC ridge;
    margin: 0em 0em 0.25em 0em;
}

#tree-panel {
    display: block;
    padding: 0.5em;
    border: 2px #CCC groove;
    margin: 0px;
}

#menu-list {
    -webkit-margin-end: 0.25em;
    -webkit-padding-start: 0.25em;
}

.menu-item {
    /*list-style: none;*/
    /* margin: 0.25em; */
    padding: 0.25em;
}

button.menu-item-button {
    padding: 0.25em;
    margin: 0.5em;
    font-size: 18px;
}

#tree-container {
    border: solid blue 2px;
}

.behavior-root-node {
    display: inline-block;
    border: 1px solid black;
    background-color: whitesmoke;
    padding: 0.25em 0.5em;
    margin: 0.25em 0.5em;
    text-align: center;
}

.behavior-root-node-text {
    font-weight: 900;
    color: indianred;
    padding: 0.25em 0.5em;
}

#character-root-tree-container {
    /*    background-color: honeydew;*/
    min-height: 500px;
    min-width: 75%;
    width: 100%;
    max-width: 100%;
    resize: vertical;
    overflow: hidden;
    padding: 0.75em;
    margin: 0 auto;
    border: solid black 1px;
}


/**
 * SVG Rendering Area
 **/

#character-root-tree-container svg {
    background-color: #fff0df;
    width: 100%;
    height: 100%;
    display: inline-block;
}

.behavior-root-node-type {
    font-weight: unset;
    color: black;
    padding: 0.25em 0.5em;
}

.behavior-child-node-container {
    display: block;
    width: 100%;
}

.behavior-child-node {
    display: inline-block;
    border: 1px solid black;
    background-color: honeydew;
    padding: 0.1em 0.2em;
    margin: 0.1em 0.2em;
}

.child {
    background-color: honeydew;
}

.param {
    background-color: #FFB7A7;
}

.intent {
    background-color: #FAFFA7;
}

.node-type-container {
    border: 2px black solid;
}

.node-type-label {
    font-weight: 900;
    font-size: 2em;
    text-align: center;
    text-decoration: underline;
    display: block;
    width: 100%;
    padding: 1em 0em 0.5em 0em;
}

.node-type-container.Action {
    background-color: lavendarblush;
}

.node-type-container.Condition {
    background-color: darkseagreen;
}

.node-type-container.Failer {
    background-color: rosybrown;
}

.node-type-container.Inverter {
    background-color: darkkhaki;
}

.node-type-container.RandFilter {
    background-color: mistyrose;
}

.node-type-container.RandSelector {
    background-color: burlywood;
}

.node-type-container.RepeatUntilFail {
    background-color: lightgray;
}

.node-type-container.Selector {
    background-color: antiquewhite;
}

.node-type-container.Sequence {
    background-color: azure;
}

.node-type-container.StatCondition {
    background-color: darksalmon;
}

.node-type-container.Successor {
    background-color: mediumturquoise;
}

.node-type-container.TargetStatCondition {
    background-color: lightsteelblue;
}

.input-form-container {
    margin: 4em auto 3em auto;
    padding: 0.1em 0.2em;
    text-align: center;
}

.state-description-container {
    margin: 1em auto 1em auto;
    padding: 0.1em 0.2em;
    text-align: center;
}

a.node-type-anchor-element {
    display: inline-block;
    margin: 0.1em 0.2em;
    padding: 0.1em 0.2em;
    text-align: center;
}











/**
 * From BehaviorTreeForce.css -- force graph styling
 **/

svg {
    background-color: #FFF;
    cursor: default;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    -o-user-select: none;
    user-select: none;
}

svg:not(.active):not(.ctrl) {
    cursor: crosshair;
}

path.link {
    fill: none;
/*    stroke: black;*/
    stroke: rgba(0, 0, 0, 0.41);
    stroke-width: 1.5px;
    cursor: default;
}

svg:not(.active):not(.ctrl) path.link {
    cursor: pointer;
}

path.link.selected {
    stroke-dasharray: 10, 2;
}

path.link.dragline {
    pointer-events: none;
}

path.link.hidden {
    stroke-width: 0;
}

circle.node {
/*    HIDING: */
    display: none;
    visibility: hidden;
/*    END HIDING */
    
    stroke-width: 1.5px;
    cursor: pointer;
}

circle.node.reflexive {
    stroke: #000 !important;
    stroke-width: 2px;
}

text {
    font: 12px sans-serif;
    pointer-events: none;
}

text.id {
    text-anchor: middle;
    font-weight: bold;
}
